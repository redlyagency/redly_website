diff --git a/node_modules/react-fb-image-grid/es/components/Images.js b/node_modules/react-fb-image-grid/es/components/Images.js
index 6744e14..f7cc70d 100644
--- a/node_modules/react-fb-image-grid/es/components/Images.js
+++ b/node_modules/react-fb-image-grid/es/components/Images.js
@@ -7,7 +7,7 @@ function _possibleConstructorReturn(self, call) { if (!self) { throw new Referen
 function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
 
 import React, { Component } from 'react';
-import { Image, Grid, Row, Col } from 'react-bootstrap';
+// import { Image, Grid, Row, Col } from 'react-bootstrap';
 import Modal from './Modal';
 import PropTypes from 'prop-types';
 
@@ -51,84 +51,38 @@ var Images = (_temp = _class = function (_Component) {
     this.setState({ modal: false });
   };
 
-  Images.prototype.renderOne = function renderOne() {
-    var images = this.props.images;
-    var countFrom = this.state.countFrom;
-
-    var overlay = images.length > countFrom && countFrom == 1 ? this.renderCountOverlay(true) : this.renderOverlay();
-
-    return React.createElement(
-      Grid,
-      null,
-      React.createElement(
-        Row,
-        null,
-        React.createElement(
-          Col,
-          { xs: 12, md: 12, className: 'border height-one background', onClick: this.openModal.bind(this, 0), style: { background: 'url(' + images[0] + ')' } },
-          overlay
-        )
-      )
-    );
-  };
-
-  Images.prototype.renderTwo = function renderTwo() {
-    var images = this.props.images;
-    var countFrom = this.state.countFrom;
-
-    var overlay = images.length > countFrom && [2, 3].includes(+countFrom) ? this.renderCountOverlay(true) : this.renderOverlay();
-    var conditionalRender = [3, 4].includes(images.length) || images.length > +countFrom && [3, 4].includes(+countFrom);
-
-    return React.createElement(
-      Grid,
-      null,
-      React.createElement(
-        Row,
-        null,
-        React.createElement(
-          Col,
-          { xs: 6, md: 6, className: 'border height-two background', onClick: this.openModal.bind(this, conditionalRender ? 1 : 0), style: { background: 'url(' + (conditionalRender ? images[1] : images[0]) + ')' } },
-          this.renderOverlay()
-        ),
-        React.createElement(
-          Col,
-          { xs: 6, md: 6, className: 'border height-two background', onClick: this.openModal.bind(this, conditionalRender ? 2 : 1), style: { background: 'url(' + (conditionalRender ? images[2] : images[1]) + ')' } },
-          overlay
-        )
-      )
-    );
-  };
-
   Images.prototype.renderThree = function renderThree(more) {
     var images = this.props.images;
     var countFrom = this.state.countFrom;
 
+    var overlayForFirst = images.length > countFrom && countFrom == 1 ? this.renderCountOverlay(true) : this.renderOverlay();
     var overlay = !countFrom || countFrom > 5 || images.length > countFrom && [4, 5].includes(+countFrom) ? this.renderCountOverlay(true) : this.renderOverlay(conditionalRender ? 3 : 4);
     var conditionalRender = images.length == 4 || images.length > +countFrom && +countFrom == 4;
 
     return React.createElement(
-      Grid,
-      null,
+      'div',
+      {className: 'grid-container'},
       React.createElement(
-        Row,
-        null,
-        React.createElement(
-          Col,
-          { xs: 6, md: 4, className: 'border height-three background', onClick: this.openModal.bind(this, conditionalRender ? 1 : 2), style: { background: 'url(' + (conditionalRender ? images[1] : images[2]) + ')' } },
-          this.renderOverlay(conditionalRender ? 1 : 2)
-        ),
-        React.createElement(
-          Col,
-          { xs: 6, md: 4, className: 'border height-three background', onClick: this.openModal.bind(this, conditionalRender ? 2 : 3), style: { background: 'url(' + (conditionalRender ? images[2] : images[3]) + ')' } },
-          this.renderOverlay(conditionalRender ? 2 : 3)
-        ),
-        React.createElement(
-          Col,
-          { xs: 6, md: 4, className: 'border height-three background', onClick: this.openModal.bind(this, conditionalRender ? 3 : 4), style: { background: 'url(' + (conditionalRender ? images[3] : images[4]) + ')' } },
-          overlay
-        )
+        'div',
+        { className: 'image-item-gallery first-gallery-item', onClick: this.openModal.bind(this, 0), style: { background: 'url(' + images[0] + ')' } },
+        overlayForFirst
+      ),
+      React.createElement(
+        'div',
+        { className: 'image-item-gallery second-gallery-item', onClick: this.openModal.bind(this, conditionalRender ? 1 : 2), style: { background: 'url(' + (conditionalRender ? images[1] : images[2]) + ')' } },
+        this.renderOverlay(conditionalRender ? 1 : 2)
+      ),
+      React.createElement(
+        'div',
+        { className: 'image-item-gallery third-gallery-item', onClick: this.openModal.bind(this, conditionalRender ? 2 : 3), style: { background: 'url(' + (conditionalRender ? images[2] : images[3]) + ')' } },
+        this.renderOverlay(conditionalRender ? 2 : 3)
+      ),
+      React.createElement(
+        'div',
+        { className: 'image-item-gallery fourth-gallery-item', onClick: this.openModal.bind(this, conditionalRender ? 3 : 4), style: { background: 'url(' + (conditionalRender ? images[3] : images[4]) + ')' } },
+        overlay
       )
-    );
+    )
   };
 
   Images.prototype.renderOverlay = function renderOverlay(id) {
@@ -144,7 +98,7 @@ var Images = (_temp = _class = function (_Component) {
 
     return [React.createElement('div', { key: 'cover-' + id, className: 'cover slide', style: { backgroundColor: overlayBackgroundColor } }), React.createElement(
       'div',
-      { key: 'cover-text-' + id, className: 'cover-text slide animate-text', style: { fontSize: '100%' } },
+      { key: 'cover-text-' + id, className: 'cover-text slide animate-text', },
       renderOverlay()
     )];
   };
@@ -157,7 +111,7 @@ var Images = (_temp = _class = function (_Component) {
 
     return [more && React.createElement('div', { key: 'count', className: 'cover' }), more && React.createElement(
       'div',
-      { key: 'count-sub', className: 'cover-text', style: { fontSize: '200%' } },
+      { key: 'count-sub', className: 'cover-text', style: { fontSize: '25px' } },
       React.createElement(
         'p',
         null,
@@ -182,10 +136,8 @@ var Images = (_temp = _class = function (_Component) {
 
     return React.createElement(
       'div',
-      { className: 'grid-container' },
-      [1, 3, 4].includes(imagesToShow.length) && this.renderOne(),
-      imagesToShow.length >= 2 && imagesToShow.length != 4 && this.renderTwo(),
-      imagesToShow.length >= 4 && this.renderThree(),
+      { className: 'grid-container-wrapper' },
+      imagesToShow.length >= 1 && this.renderThree(),
       modal && React.createElement(Modal, { onClose: this.onClose, index: index, images: images })
     );
   };
diff --git a/node_modules/react-fb-image-grid/es/components/Modal.js b/node_modules/react-fb-image-grid/es/components/Modal.js
index 486618b..31029d6 100644
--- a/node_modules/react-fb-image-grid/es/components/Modal.js
+++ b/node_modules/react-fb-image-grid/es/components/Modal.js
@@ -5,7 +5,7 @@ function _possibleConstructorReturn(self, call) { if (!self) { throw new Referen
 function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
 
 import React, { Component } from 'react';
-import { Image, Modal, Grid, Row, Col } from 'react-bootstrap';
+// import { Image, Modal, Grid, Row, Col } from 'react-bootstrap';
 import Lightbox from 'react-image-lightbox';
 import 'react-image-lightbox/style.css'; // This only needs to be imported once in your app
 
diff --git a/node_modules/react-fb-image-grid/es/css/style.css b/node_modules/react-fb-image-grid/es/css/style.css
index cc154f1..0e77c6c 100644
--- a/node_modules/react-fb-image-grid/es/css/style.css
+++ b/node_modules/react-fb-image-grid/es/css/style.css
@@ -1,20 +1,75 @@
-@import 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css';
-@import 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css';
+/* @import 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css';
+@import 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css'; */
 
 /* Images Component CSS */
 
+/* 'border height-three background */
+
+
+.image-item-gallery {
+  height: calc( 300px - 1px );
+  width: calc( 300px - 1px );
+  position: relative;
+  background-size: cover !important;
+  background-position: center !important;
+  background-repeat: no-repeat !important;
+  border: none;
+  cursor: pointer;
+  filter: brightness(0.8);
+}
+.image-item-gallery:hover {
+  transform: scale(1.01);
+  opacity: 0.85;
+  z-index: 50;
+}
+.first-gallery-item {
+  border-radius: 30px 0 30px 0 ;
+}
+.second-gallery-item {
+  border-radius: 0 30px 0 30px;
+}
+.third-gallery-item {
+  border-radius: 0 30px 0 30px;
+}
+.fourth-gallery-item {
+  border-radius: 30px 0 30px 0;
+}
+.cover {
+  backdrop-filter: blur(6px);
+  filter: brightness(0.5);
+  position: absolute;
+  right: 0;
+  top: 0;
+  left: 0;
+  bottom: 0;
+  border-radius: 30px 0 30px 0;
+}
+
+/* dfgsdf */
+/* .grid-container-wrapper {
+  text-align: center;
+  margin: auto;
+  width: 600px !important;
+  height: 600px !important;
+  background-color: blue;
+  display: flex;
+  flex-wrap: wrap;
+} */
 .grid-container {
   text-align: center;
   margin: auto;
-  width: 100%;
-  padding: 10px;
+  width: 600px !important;
+  height: 600px !important;
+  display: flex;
+  flex-wrap: wrap;
+  gap: 2px;
 }
 
-.container {
-  padding-left: 0;
-  padding-right: 0;
-  width: 100% !important;
-}
+/* .container {
+  width: 300px !important;
+  height: 300px !important;
+  background-color: green;
+} */
 
 .container *{
   margin: 0;
@@ -22,13 +77,12 @@
   cursor: pointer;
 }
 
-.col-md-4 {
+/* .col-md-4 {
   width: 33.33333333%;
-}
+} */
 
 .border {
-  border: 2px solid white;
-  border-radius: 6px;
+  border: none;
 }
 
 .background {
@@ -38,37 +92,31 @@
 }
 
 .height-one {
-  width: 100%;
-  padding-top: 100%;
+  height: 300px;
+  width: 300px;
+  position: relative;
 }
 
 .height-two {
-  width: 50%;
-  padding-top: 50%;
+  height: 300px;
+  width: 300px;
 }
 
 .height-three {
-  width: 33.3333%;
-  padding-top: 33.3333%;
+  height: 300px;
+  width: 300px;
+  position: relative;
 }
 
-.cover {
-  background-color: #222;
-  opacity: 0.8;
-  position: absolute;
-  right: 0;
-  top: 0;
-  left: 0;
-  bottom: 0;
-  border-radius: 6px;
-}
+
 
 .cover-text {
   right: 0;
   left: 0;
   bottom: 0;
   color: white;
-  font-size: 7%;
+  font-size: 45px !important;
+  font-weight: 600;
   position: absolute;
   top: 50%;
   -webkit-transform: translate(0%, -50%);
@@ -86,18 +134,69 @@
 }
 
 .slide {
-  height: 0;
+  height: 100%;
   bottom: 100%;
   transition: .5s ease;
   overflow: hidden;
-  font-size: 3%;
+  opacity: 0;
 }
 
-.border:hover .slide  {
+/* .image-item-gallery:hover .slide  {
   bottom: 0;
-  height: auto;
+  opacity: 1;
 }
 
-.border:hover .animate-text  {
+.image-item-gallery:hover .animate-text  {
   top: 62%
+} */
+
+/* largeDesktop: '1670px',
+    desktop: '1400px',
+    laptop: '1024px',
+    tablet: '768px',
+    largeMobile: '600px',
+    mobile: '480px' */
+
+@media (max-width: 1670px) {
+  .image-item-gallery {
+    height: calc( 550px / 2 - 1px );
+    width: calc( 550px / 2 - 1px );
+  }
+  .grid-container {
+    width: 550px !important;
+    height: 550px !important;
+  }
+  .cover-text {
+    font-size: 38px !important;
+  }
+}
+@media (max-width: 1324px) {
+  .image-item-gallery {
+    height: calc( 550px / 2 - 1px );
+    width: calc( 100% / 2 - 1px );
+  }
+  .grid-container {
+    width: 100% !important;
+    height: 550px !important;
+  }
+  .cover-text {
+    font-size: 38px !important;
+  }
+}
+@media (max-width: 768px) {
+  .first-gallery-item {
+    border-radius: 0 0 30px 0;
+  }
+  .second-gallery-item {
+    border-radius: 0 0 0 30px;
+  }
+  .third-gallery-item {
+    border-radius: 0 30px 0 0;
+  }
+  .fourth-gallery-item {
+    border-radius: 30px 0 0 0;
+  }
+  .cover {
+    border-radius: 30px 0 0 0;
+  }
 }
\ No newline at end of file
diff --git a/node_modules/react-fb-image-grid/lib/css/style.css b/node_modules/react-fb-image-grid/lib/css/style.css
index cc154f1..3ae2cb0 100644
--- a/node_modules/react-fb-image-grid/lib/css/style.css
+++ b/node_modules/react-fb-image-grid/lib/css/style.css
@@ -2,12 +2,13 @@
 @import 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css';
 
 /* Images Component CSS */
-
+/* fgsdfg */
 .grid-container {
   text-align: center;
   margin: auto;
   width: 100%;
   padding: 10px;
+  height: 50%;
 }
 
 .container {
@@ -27,8 +28,8 @@
 }
 
 .border {
-  border: 2px solid white;
-  border-radius: 6px;
+  border: none;
+  border-radius: 0;
 }
 
 .background {
diff --git a/node_modules/react-fb-image-grid/package.json b/node_modules/react-fb-image-grid/package.json
index f421fef..d663c27 100644
--- a/node_modules/react-fb-image-grid/package.json
+++ b/node_modules/react-fb-image-grid/package.json
@@ -22,11 +22,10 @@
   "dependencies": {
     "@material-ui/core": "^3.1.2",
     "@material-ui/icons": "^3.0.1",
-    "react-bootstrap": "^0.32.4",
     "react-image-lightbox": "^5.0.0"
   },
   "peerDependencies": {
-    "react": "16.x"
+    "react": "17.x"
   },
   "devDependencies": {
     "nwb": "0.23.x",
